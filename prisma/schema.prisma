generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int       @id @default(autoincrement())
  name         String
  email        String    @unique
  password     String
  role         Role
  bugs         Bug[]     @relation("BugAssignee")
  createdBugs  Bug[]     @relation("BugCreator")
  tasks        Task[]    @relation("TaskAssignee")
  createdTasks Task[]    @relation("TaskCreator")
  timeLogs     TimeLog[]
}

model Task {
  id           Int       @id @default(autoincrement())
  title        String
  description  String
  assignedToId Int
  priority     Priority
  status       Status    @default(OPEN)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  createdById  Int
  assignedTo   User      @relation("TaskAssignee", fields: [assignedToId], references: [id])
  createdBy    User      @relation("TaskCreator", fields: [createdById], references: [id])
  timeLogs     TimeLog[]
}

model Bug {
  id           Int       @id @default(autoincrement())
  title        String
  description  String
  assignedToId Int
  priority     Priority
  status       Status    @default(OPEN)
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  createdById  Int
  assignedTo   User      @relation("BugAssignee", fields: [assignedToId], references: [id])
  createdBy    User      @relation("BugCreator", fields: [createdById], references: [id])
  timeLogs     TimeLog[]
}

model TimeLog {
  id        Int      @id @default(autoincrement())
  taskId    Int?
  bugId     Int?
  userId    Int
  minutes   Int
  date      DateTime @default(now())
  comments  String?
  createdAt DateTime @default(now())
  bug       Bug?     @relation(fields: [bugId], references: [id])
  task      Task?    @relation(fields: [taskId], references: [id])
  user      User     @relation(fields: [userId], references: [id])
}

enum Role {
  DEVELOPER
  MANAGER
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  BLOCKER
}

enum Status {
  OPEN
  FIXED
  PENDING_APPROVAL
  CLOSED
  ARCHIVED
  REOPENED
}
