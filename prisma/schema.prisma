generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  DEVELOPER
  MANAGER
}

enum Priority {
  LOW
  MEDIUM
  HIGH
  BLOCKER
}

enum Status {
  OPEN
  IN_PROGRESS
  FIXED
  PENDING_APPROVAL
  CLOSED
}

model User {
  id         Int       @id @default(autoincrement())
  name       String
  email      String    @unique
  password   String
  role       Role
  tasks      Task[]    @relation("TaskAssignee")
  bugs       Bug[]     @relation("BugAssignee")
  timeLogs   TimeLog[]
  createdTasks Task[]  @relation("TaskCreator")
  createdBugs  Bug[]   @relation("BugCreator")
}

model Task {
  id            Int       @id @default(autoincrement())
  title         String
  description   String
  priority      Priority
  status        Status    @default(OPEN)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  assignedToId  Int
  createdById   Int

  assignedTo    User      @relation("TaskAssignee", fields: [assignedToId], references: [id])
  createdBy     User      @relation("TaskCreator", fields: [createdById], references: [id])

  timeLogs      TimeLog[]
}

model Bug {
  id            Int       @id @default(autoincrement())
  title         String
  description   String
  priority      Priority
  status        Status    @default(OPEN)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  assignedToId  Int
  createdById   Int

  assignedTo    User      @relation("BugAssignee", fields: [assignedToId], references: [id])
  createdBy     User      @relation("BugCreator", fields: [createdById], references: [id])

  timeLogs      TimeLog[]
}

model TimeLog {
  id        Int      @id @default(autoincrement())
  taskId    Int?
  bugId     Int?
  userId    Int
  minutes   Int
  date      DateTime @default(now())
  archived  Boolean  @default(false)
  comments  String?
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
  task      Task?    @relation(fields: [taskId], references: [id], onDelete: SetNull)
  bug       Bug?     @relation(fields: [bugId], references: [id], onDelete: SetNull)
}
